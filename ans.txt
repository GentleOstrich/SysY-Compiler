declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)
@a = dso_local global [6 x i32] [i32 1, i32 2, i32 3, i32 4, i32 5, i32 6]
@b = dso_local global [3 x [3 x i32]] [[3 x i32] [i32 3, i32 8, i32 5], [3 x i32] [i32 1, i32 2, i32 0], [3 x i32] zeroinitializer]
define dso_local void @a1(i32 %0) {
    %2 = alloca i32
    store i32 %0, i32 * %2
    br label %3

3:
    %4 = load i32, i32* %2
    %5 = icmp sgt i32 %4, 1
    %6 = zext i1 %5 to i32
    %7 = icmp ne i32 0, %6
    br i1 %7, label %8, label %11

8:
    %9 = load i32, i32* %2
    %10 = sub i32 %9, 1
    call void @a1(i32 %10)
    br label %11

11:
    ret void
}
define dso_local i32 @a2(i32 %0, i32* %1) {
    %3 = alloca i32*
    store i32* %1, i32* * %3
    %4 = alloca i32
    store i32 %0, i32 * %4
    %5 = load i32, i32* %4
    %6 = load i32*, i32* * %3
    %7 = getelementptr i32, i32* %6, i32 2
    %8 = load i32, i32* %7
    %9 = add i32 %5, %8
    ret i32 %9
}
define dso_local i32 @a3(i32 %0, i32* %1, [3 x i32] *%2) {
    %4 = alloca [3 x i32]*
    store [3 x i32]* %2, [3 x i32]* * %4
    %5 = alloca i32*
    store i32* %1, i32* * %5
    %6 = alloca i32
    store i32 %0, i32 * %6
    %7 = load i32, i32* %6
    %8 = load i32*, i32* * %5
    %9 = getelementptr i32, i32* %8, i32 1
    %10 = load i32, i32* %9
    %11 = mul i32 %7, %10
    %12 = load [3 x i32] *, [3 x i32]* * %4
    %13 = getelementptr [3 x i32], [3 x i32]* %12, i32 2
    %14 = getelementptr [3 x i32], [3 x i32]* %13, i32 0, i32 1
    %15 = load i32, i32 *%14
    %16 = sub i32 %11, %15
    ret i32 %16
}

define dso_local i32 @main() {
    %1 = alloca [2 x [ 3 x i32]]
    %2 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]*%1, i32 0, i32 0, i32 0
    store i32 1, i32* %2
    %3 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]*%1, i32 0, i32 0, i32 1
    store i32 2, i32* %3
    %4 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]*%1, i32 0, i32 0, i32 2
    store i32 3, i32* %4
    %5 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]*%1, i32 0, i32 1, i32 0
    store i32 0, i32* %5
    %6 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]*%1, i32 0, i32 1, i32 1
    store i32 0, i32* %6
    %7 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]*%1, i32 0, i32 1, i32 2
    store i32 0, i32* %7
    %8 = getelementptr [2 x [3 x i32]], [2 x [3 x i32]]*%1, i32 0, i32 0, i32 2
    %9 = load i32, i32* %8
    call void @a1(i32 %9)
    %10 = alloca i32
    %11 = getelementptr [6 x i32], [6 x i32]* @a, i32 0, i32 4
    %12 = load i32, i32* %11
    %13 = getelementptr [6 x i32], [6 x i32]* @a, i32 0, i32 0
    %14 = call i32 @a2(i32 %12, i32* %13)
    store i32 %14, i32* %10
    %15 = alloca i32
    %16 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @b, i32 0, i32 0, i32 1
    %17 = load i32, i32* %16
    %18 = mul i32 1, 3
    %19 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @b, i32 0, i32 0
    %20 = getelementptr [3 x i32], [3 x i32]* %19, i32 0, i32 %18
    %21 = getelementptr [3 x [3 x i32]], [3 x [3 x i32]]* @b, i32 0, i32 0
    %22 = call i32 @a3(i32 %17, i32* %20, [3 x i32]* %21)
    store i32 %22, i32* %15
    %23 = load i32, i32* %10
    %24 = load i32, i32* %15
    %25 = add i32 %23, %24
    call void @putint(i32 %25)
    ret i32 0
}